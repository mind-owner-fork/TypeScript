=== tests/cases/conformance/classes/members/privateNames/privateNameInTypeQuery.ts ===
class C {
>C : Symbol(C, Decl(privateNameInTypeQuery.ts, 0, 0))

    #a = 'a';
>#a : Symbol(C.#a, Decl(privateNameInTypeQuery.ts, 0, 9))

    constructor() {
        const a: typeof this.#a = ''; // Ok
>a : Symbol(a, Decl(privateNameInTypeQuery.ts, 4, 13))
>this.#a : Symbol(C.#a, Decl(privateNameInTypeQuery.ts, 0, 9))
>this : Symbol(C, Decl(privateNameInTypeQuery.ts, 0, 0))

        const b: typeof this.#a = 1;  // Error
>b : Symbol(b, Decl(privateNameInTypeQuery.ts, 5, 13))
>this.#a : Symbol(C.#a, Decl(privateNameInTypeQuery.ts, 0, 9))
>this : Symbol(C, Decl(privateNameInTypeQuery.ts, 0, 0))
    }
}

const c = new C();
>c : Symbol(c, Decl(privateNameInTypeQuery.ts, 9, 5))
>C : Symbol(C, Decl(privateNameInTypeQuery.ts, 0, 0))

const a: typeof c.#a = '';
>a : Symbol(a, Decl(privateNameInTypeQuery.ts, 10, 5))
>c : Symbol(c, Decl(privateNameInTypeQuery.ts, 9, 5))

